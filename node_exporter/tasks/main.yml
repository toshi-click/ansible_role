- include: Ubuntu.yml
  when: "ansible_os_family == 'Debian'"

# prometheusのインストールを確認する
- name: Confirm installation of Node Exporter
  stat:
    path: "{{ node_exporter_dir }}-{{ node_exporter_version }}"
  register: node_exporter_state
# 同じprometheusバージョンがインストール済みだったらやらない設定
- block:
    - name: get Node Exporter
      get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: "{{ node_exporter_src_dir }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        mode: 0644
      register: result_node_exporter_get_url
      when: ansible_architecture != "armv7l"

    - name: get Node Exporter
      get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: "{{ node_exporter_src_dir }}/node_exporter-{{ node_exporter_version }}.linux-armv7.tar.gz"
        mode: 0644
      register: result_node_exporter_get_url
      when: ansible_architecture == "armv7l"

    # ダウンロードファイルを確認する
    - name: Check the Node Exporter download file
      stat:
        path: "{{ result_node_exporter_get_url.dest }}"
      register: archive_node_exporter_file_state

    # ダウンロードファイルを解凍する
    - name: Unzip the Node Exporter download file
      shell: "tar zxf node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
      args:
        chdir: "{{ node_exporter_src_dir }}"
      when:
        - archive_node_exporter_file_state.stat.exists
        - ansible_architecture != "armv7l"

    - name: "cp Node Exporter rename"
      shell: "cp -rp node_exporter-{{ node_exporter_version }}.linux-amd64 {{ node_exporter_dir }}-{{ node_exporter_version }}"
      args:
        chdir: "{{ node_exporter_src_dir }}"
      when:
        - archive_node_exporter_file_state.stat.exists
        - ansible_architecture != "armv7l"
        -
    # ダウンロードファイルを解凍する
    - name: Unzip the Node Exporter download file
      shell: "tar zxf node_exporter-{{ node_exporter_version }}.linux-armv7.tar.gz"
      args:
        chdir: "{{ node_exporter_src_dir }}"
      when:
        - archive_node_exporter_file_state.stat.exists
        - ansible_architecture == "armv7l"

    - name: "cp Node Exporter rename"
      shell: "cp -rp node_exporter-{{ node_exporter_version }}.linux-armv7 {{ node_exporter_dir }}-{{ node_exporter_version }}"
      args:
        chdir: "{{ node_exporter_src_dir }}"
      when:
        - archive_node_exporter_file_state.stat.exists
        - ansible_architecture == "armv7l"
  # 同じprometheusバージョンインストール済みだったらやらない範囲終わり
  when: not node_exporter_state.stat.exists

- name: "make link"
  file:
    src: "{{ node_exporter_dir }}-{{ node_exporter_version }}"
    dest: "{{ node_exporter_dir }}"
    state: link

- name: prometheus-node-exporter.service set
  template:
    src: prometheus-node-exporter.service
    dest: /etc/systemd/system/prometheus-node-exporter.service
    owner: root
    group: root
    mode: 0644

# systemdにconfigsを読み直すように強制する
- name: just force systemd to reread configs
  systemd:
    daemon_reload: yes

- name: "create directory {{ node_exporter_config_dir }}"
  file:
    path: "{{ node_exporter_config_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0644

- name: prometheus-node-exporter config set
  template:
    src: node_exporter_config
    dest: "{{ node_exporter_config_file }}"
    owner: root
    group: root
    mode: 0644
